.org 0x3000
SET PC, openf

; 0x42c jumptable
:os_enterdone dat 0x1002
:os_input dat 0x1004

.include "jumptable.dasm16"

:openbaydoors dat "I'm sorry, Dave. I'm afraid I can't do that.", 0
:openelse dat "File not found.", 0

:open dat "open", 0
:openwhat dat "pod_bay_doors", 0

:openf
	jsr [kern_newline]
	set a, open
	jsr [kern_strlen]
	add a, 1	            ; +1 to kern_strlen,
			                ; for the space
			            
	set b, [os_input]
	set b, [b]
	add b, a 	            ; start at `kern_strlen'
	
	set a, b	            ; string pointer
	set b, openwhat
	jsr [kern_strcmp]
    
	
	ife a, 0
		set pc, openf_doors

	ifn a, 0
		set pc, openf_other
	
	:openf_doors
		set a, openbaydoors
		jsr [kern_printnl]
		set pc, openf_end
		
	:openf_other
		set a, openelse
		jsr [kern_printnl]
		set pc, openf_end
	
	:openf_end
	    set a, 1
		set pc, [os_enterdone]
