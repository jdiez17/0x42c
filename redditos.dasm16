SET PC, initialstate

:version dat "RedditOS v.0.1 128K MEM READY", 0
:input dat "> ", 0
:lol dat "Lololol.", 0
:reddit dat "reddit", 0
:date dat "date", 0
:clean dat "clean", 0
:redditoutput dat "Reddit, the frontpage of the internet.", 0
:dateoutput dat "00:00:00 UTC on 1 January 1970", 0
:unrecognized dat "Unrecognized command.", 0

:initialstate
set a, 0x8000   ; vidmem
set [0x1337], 0x1338 ; input buffer

:main

set b, version
jsr printnl

:inputready
set b, input
jsr print

set pc, kbloop

:kbloop

ife [0x9000], 0
set pc, kbloop
ife [0x9000], 0xA
jsr enteredcommand

set y, [0x9000]
ifn y, 0xA
jsr printchar

set b, [0x1337]
set j, [0x9000]
ifn y, 0xA
jsr strcat
ifn y, 0xA
add [0x1337], 1

set [0x9000], 0

set pc, kbloop

:enteredcommand
set c, reddit
set x, 0x1338
jsr strcmp
ife y, 1
jsr redditf

set c, date
set x, 0x1338
jsr strcmp
ife y, 1
jsr datef

set c, clean
set x, 0x1338
jsr strcmp
ife y, 1
jsr cleanf

ifn [0x1336], 1
jsr unrecognizedf

set [0x1337], 0x1338 ; reset pointer
set [0x1338], 0        ; reset string
set [0x9000], 0      ; reset keyboard
set [0x1336], 0      ; reset command recognized
set pc, inputready

:cleanf
set [0x1336], 1
set a, 0x8000
:clean_print
ifg a, 0x81ff
set pc, pop
set [a], 256
add a, 1
set pc, clean_print

:unrecognizedf
jsr newline
set b, unrecognized
jsr printnl

set pc, pop

:redditf
set [0x1336], 1 ; acknowledge recognized command

jsr printnl
set b, redditoutput
jsr printnl
set pc, pop

:datef
set [0x1336], 1 ; acknowledge recognized command

jsr printnl
set b, dateoutput
jsr printnl
set pc, pop

:strcmp
set y, 0

ife [c], [x]
jsr checkzero

ife y, 1
set pc, pop

ifn [c], [x]
set pc, pop

add c, 1
add x, 1
set pc, strcmp

:checkzero
ife [c], 0
set y, 1
set pc, pop

:strcat
set [b], j
add b, 1
set [b], 0
set pc, pop


:printnl   ; shortcut
jsr print
jsr newline
set pc, pop

:print

ifg a, 0x81ff ; end of vidmem
set a, 0x8000
ife [b], 0
set pc, pop
set y, [b]
jsr printchar
add b, 1
set pc, print

:printchar

bor y, 0xf100 ; color :D
set [a], y
add a, 1
set pc, pop

:newline

set i, a
mod i, 32 ; width
set z, 32
sub z, i
add a, z
set pc, pop

:end set pc, end
